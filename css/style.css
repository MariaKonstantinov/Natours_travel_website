/* Header Animations */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    /* X is from left to right (horizontally), Y is from top to bottom (vertically) */
    /* positive value - from left to right, negative value (-100) goes from right to left */
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    /* translate (0) to look as initial state */
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    /* X is from left to right (horizontally), Y is from top to bottom (vertically) */
    /* positive value - from left to right, negative value (-100) goes from right to left */
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    /* translate (0) to look as initial state */
    transform: translate(0); } }

/* Header Button Animations */
@keyframes moveInUp {
  0% {
    opacity: 0;
    /* X is from left to right (horizontally), Y is from top to bottom (vertically) */
    /* positive value - from left to right, negative value (-100) goes from right to left */
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    /* translate (0) to look as initial state */
    transform: translate(0); } }

/* universal styles */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* borders and padding are no longer added to total width/heigh of elements */
  box-sizing: inherit; }

/* we need to change our px to rem - as 1 rem is exactly the root font-size - 
we do 10px as our root font-size, 1 rem is 10px, we devide now all px value of element by 10 */
/* best practice to have this value in % - we devide 10 by 16 (default font-size is 16px) - 62.5% */
html {
  font-size: 62.5%; }

/* general styles */
body {
  box-sizing: border-box; }

/* general styles */
body {
  /* properties related to font are usually inherited and placed in body section*/
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  letter-spacing: 0.2rem;
  transition: all 0.2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.u-margin-bottom-medium {
  margin-bottom: 4rem; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.u-margin-top-medium {
  margin-top: 8rem; }

.u-margin-top-big {
  margin-top: 10rem; }

/* Header Button */
/* btn:link is a pseudo class, special state of a selector, when it is an anchor element, so it functions as a link */
.btn {
  /* when the button is clicked */
  /* after pseudo element adds like a "virtual" element right after our element and we can style it */
  /* ccreating a new class because we want only this specific animation for 1 specific button so we don't apply it to main btn-white class */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    /* we need inline-block to change default inline prop, to make it as a box element */
    display: inline-block;
    border-radius: 10rem;
    /* a more easy way to do animation - use transition prop on the element itself, not on element: hover */
    transition: all 0.2s;
    /* as we have position: absolute for pseudo button, so we need to have position: relative for its parent container */
    position: relative;
    font-size: 1.6rem; }
  .btn:hover {
    /* to move element up along Y we need to use negative value */
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    /* when we hover the button we want styles for pseudo element to be activated */ }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      /* to make smth fade out */
      opacity: 0; }
  .btn:active {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn_type_white {
    background-color: #fff;
    color: #777; }
    .btn_type_white::after {
      background-color: #fff; }
  .btn_type_green {
    background-color: #55c57a;
    color: #fff; }
    .btn_type_green::after {
      background-color: #55c57a; }
  .btn::after {
    /* for pseudo element to work we need to mandatory specify "content" prop (we can even make it empty - "") */
    content: "";
    /* we need to mandatory specify "display" prop as well */
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    /* to put our pseudo button right behind the real button - apply position: absolute - and make it's parent element have position: relative */
    position: absolute;
    top: 0;
    left: 0;
    /* z-index defines position of elements when they are placed one covering another */
    z-index: -1;
    /* we put the transition property on the element itself, not on element: hover */
    transition: all 0.4s; }
  .btn_type_animated {
    /* prop: animation name, duration, timing function and delay */
    animation: moveInUp 0.5s ease-out 0.75s;
    /* animation fill mode - backwards - applies styles of 0% before animation starts */
    animation-fill-mode: backwards; }

/* About section Button */
.btn-text {
  /* when the button is clicked */ }
  .btn-text:link, .btn-text:visited {
    font-size: 1.6rem;
    color: #55c57a;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid #55c57a;
    padding: 0.8rem;
    transition: all 0.2s; }
  .btn-text:hover {
    background-color: #55c57a;
    color: #fff;
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
    transform: translateY(-2px);
    border-radius: 10rem; }
  .btn-text:active {
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    transform: translateY(0); }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 0.6rem;
    position: absolute;
    z-index: 10;
    transition: all 0.2s;
    outline-offset: 2rem; }
    .composition__photo_p1 {
      left: 0;
      top: -2rem; }
    .composition__photo_p2 {
      right: 0;
      top: 2rem; }
    .composition__photo_p3 {
      left: 20%;
      top: 10rem; }
    .composition__photo:hover {
      transform: scale(1.05) translateY(-0.5rem);
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 20;
      outline: 1.5rem solid #55c57a; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.95); }

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 0.6rem;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transform 0.3s; }
  .feature-box__icon {
    font-size: 6rem;
    margin-bottom: 0.5rem;
    display: inline-block;
    background-image: linear-gradient(to right, #7ed56f, #28b485);
    -webkit-background-clip: text;
    color: transparent; }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.03); }

.card {
  perspective: 150rem;
  -moz-perspective: 150rem;
  position: relative;
  height: 52rem; }
  .card__side {
    height: 52rem;
    color: white;
    font-size: 2rem;
    transition: all 0.8s ease;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    backface-visibility: hidden;
    border-radius: 0.6rem;
    overflow: hidden;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15); }
    .card__side_front {
      background-color: #fff; }
    .card__side_back {
      transform: rotateY(180deg); }
      .card__side_back-1 {
        background-image: linear-gradient(to right bottom, #ffb900, #ff7730); }
      .card__side_back-2 {
        background-image: linear-gradient(to right bottom, #7ed56f, #28b485); }
      .card__side_back-3 {
        background-image: linear-gradient(to right bottom, #2998ff, #5643fa); }
  .card:hover .card__side_front {
    transform: rotateY(-180deg); }
  .card:hover .card__side_back {
    transform: rotateY(0); }
  .card__picture {
    background-size: cover;
    height: 23rem;
    background-blend-mode: screen;
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%); }
    .card__picture_1 {
      background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../media/nat-5.jpg); }
    .card__picture_2 {
      background-image: linear-gradient(to right bottom, #7ed56f, #28b485), url(../media/nat-6.jpg); }
    .card__picture_3 {
      background-image: linear-gradient(to right bottom, #2998ff, #5643fa), url(../media/nat-7.jpg); }
  .card__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    text-align: right;
    color: #fff;
    position: absolute;
    top: 12rem;
    right: 2rem;
    width: 75%; }
  .card__heading-span {
    padding: 1rem 1.5rem;
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone; }
    .card__heading-span_1 {
      background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85)); }
    .card__heading-span_2 {
      background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.85), rgba(40, 180, 133, 0.85)); }
    .card__heading-span_3 {
      background-image: linear-gradient(to right bottom, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85)); }
  .card__details {
    padding: 3rem; }
  .card__list {
    list-style: none;
    width: 80%;
    margin: 0 auto; }
  .card__list-item {
    text-align: center;
    font-size: 1.5rem;
    padding: 1rem;
    color: #777; }
    .card__list-item:not(:last-child) {
      border-bottom: 1px solid #eee; }
  .card__cta {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    text-align: center; }
  .card__price-box {
    text-align: center;
    margin-bottom: 8rem;
    color: #fff; }
  .card__price-only {
    font-size: 1.4rem;
    text-transform: uppercase; }
  .card__price-value {
    font-size: 6rem;
    font-weight: 100; }

/* Header section */
.header {
  /* at every point the size of this element should be 95% of the viewport height */
  height: 95vh;
  background-image: linear-gradient(rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../media/hero.jpg);
  /* whatever the width of the viewport is, cover always fits the element in the box */
  background-size: cover;
  /* whatever the width of the viewport is, the top of image will stay at the top of container */
  background-position: top;
  /* clip-path - clips the images */
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* we add relative position to parent element (header) so that logo-box element's position absolute is related to header */
  position: relative; }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    /* enough to specify just 1 parameter - height, width will be automatically calc by browser */
    height: 3.5rem;
    /* we can add same animation function in diff places - ex when we hover over logo - logo:hover */ }
  .header__text-box {
    position: absolute;
    /* top and left prop are related to parent */
    top: 40%;
    left: 50%;
    /* to center the element - in relation to the element itself */
    transform: translate(-50%, -50%);
    /* to center text that we have inside the box - use text-align: center */
    text-align: center; }
  .header__text {
    color: #fff;
    text-transform: uppercase;
    /* Backface-visibility determins if the backpart of the element if visible/hidden when we transform it - fixes "shaking" of animation */
    backface-visibility: hidden;
    margin-bottom: 6rem; }
  .header__text_type_main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    /* 2 properties for animation to work - name and duration */
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /* some additional useful animation functions */
    /* animation-delay: 3s; */
    /* animation-iteration-count: 3; */ }
  .header__text_type_sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    /* Shorthand for animation to work */
    animation: moveInRight 1s ease-out; }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc( 2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc( 2 * ((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc( 3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem); }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }

.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../media/nat-4.jpg);
  background-size: cover;
  margin-top: -10rem;
  transform: skewY(-7deg); }
  .section-features > * {
    transform: skewY(7deg); }

.section-tours {
  background-color: #f7f7f7;
  padding: 25rem 0 20rem 0;
  margin-top: -10rem; }
